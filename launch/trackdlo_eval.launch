<launch>
    <!-- change the below parameters to match your camera/scene setup -->
    <arg name="camera_info_topic" default="/camera/color/camera_info" />
    <!-- <arg name="camera_info_topic" default="/camera/aligned_depth_to_color/camera_info" /> -->
    <arg name="rgb_topic" default="/camera/color/image_raw" />
    <arg name="depth_topic" default="/camera/aligned_depth_to_color/image_raw" />
    <arg name="result_frame_id" default="camera_color_optical_frame" />
    <arg name="hsv_threshold_upper_limit" default="130 255 255" />
    <!-- <arg name="hsv_threshold_lower_limit" default="100 200 60" /> -->
    <arg name="hsv_threshold_lower_limit" default="90 90 30" />
    <!-- <arg name="hsv_threshold_lower_limit" default="90 90 90" /> -->
    <arg name="num_of_nodes" default="40" />
    <arg name="visualize_initialization_process" default="false" />
    <arg name="multi_color_dlo" default="true" />

    <!-- load parameters to corresponding nodes -->
    <node name="trackdlo" pkg="trackdlo" type="trackdlo" output="screen">
        <param name="camera_info_topic" type="string" value="$(arg camera_info_topic)" />
        <param name="rgb_topic" type="string" value="$(arg rgb_topic)" />
        <param name="depth_topic" type="string" value="$(arg depth_topic)" />
        <param name="result_frame_id" type="string" value="$(arg result_frame_id)" />

        <param name="hsv_threshold_upper_limit" type="string" value="$(arg hsv_threshold_upper_limit)" />
        <param name="hsv_threshold_lower_limit" type="string" value="$(arg hsv_threshold_lower_limit)" />

        <!-- beta and lambda: MCT weights. the larger they are, the more rigid the object becomes -->
        <param name="beta" value="0.5" />
        <param name="lambda" value="50000" />

        <!-- alpha: the alignment strength -->
        <param name="alpha" value="3" />

        <!-- mu: ranges from 0 to 1, large mu indicates the point cloud is noisy -->
        <param name="mu" value="0.1" />

        <!-- max_iter: the maximum number of iterations the EM loop undergoes before termination -->
        <param name="max_iter" value="50" />

        <!-- tol: EM optimization convergence tolerance -->
        <param name="tol" value="0.0002" />

        <!-- k_vis: the strength of visibility information's effect on membership probability computation -->
        <param name="k_vis" value="500" />

        <!-- d_vis: the max geodesic distance between two adjacent visible nodes for the nodes between them to be considered visible -->
        <param name="d_vis" value="0.06" />

        <!-- visibility_threshold (tau_vis): the max distance a node can be away from the current point cloud to be considered visible -->
        <param name="visibility_threshold" type="double" value="0.005" />

        <!-- dlo_pixel_width (w): the approximate dlo width when projected onto 2D -->
        <param name="dlo_pixel_width" value="30" />

        <!-- below are parameters for the GLTP registration during pre-processing -->
        <param name="beta_pre_proc" value="3.0" />
        <param name="lambda_pre_proc" value="1.0" />
        <param name="lle_weight" value="10.0" />

        <param name="downsample_leaf_size" value="0.005" />
        <param name="multi_color_dlo" type="bool" value="$(arg multi_color_dlo)" />
    </node>

    <!-- launch python node for initialization -->
    <node name="init_tracker" pkg="trackdlo" type="initialize.py" output="screen">
        <param name="camera_info_topic" type="string" value="$(arg camera_info_topic)" />
        <param name="rgb_topic" type="string" value="$(arg rgb_topic)" />
        <param name="depth_topic" type="string" value="$(arg depth_topic)" />
        <param name="result_frame_id" type="string" value="$(arg result_frame_id)" />

        <param name="num_of_nodes" value="$(arg num_of_nodes)" />
        <param name="multi_color_dlo" type="bool" value="$(arg multi_color_dlo)" />
        <param name="visualize_initialization_process" type="bool" value="$(arg visualize_initialization_process)" />

        <param name="hsv_threshold_upper_limit" type="string" value="$(arg hsv_threshold_upper_limit)" />
        <param name="hsv_threshold_lower_limit" type="string" value="$(arg hsv_threshold_lower_limit)" />
    </node>

</launch>